@use "sass:math"
@import "./index.sass"    

    
.glitch 
    color: $c-main
    position: relative
    text-shadow: 0px 0px 20px $c-main
    font-size: $s-title
    font-family: $f-cyberway
    animation: glitch 5s 5s infinite


.glitch::before 
    content: attr(data-text)
    position: absolute
    left: -2px
    text-shadow: -4px -1px $c-secondary1, 0px 0px 5px $c-main
    overflow: hidden
    top: 0
    animation: noise-1 3s linear infinite alternate-reverse, glitch 5s 5s infinite


.glitch::after 
    content: attr(data-text)
    position: absolute
    left: 2px
    text-shadow: -4px -1px $c-secondary2, 0px 0px 5px $c-main
    overflow: hidden
    top: 0
    animation: noise-2 3s linear infinite alternate-reverse, glitch 5s 5s infinite


@keyframes glitch 
    1%
        transform: rotateX(10deg) skewX(75deg)
    2%
        transform: rotateX(0deg) skewX(0deg)
  

@keyframes noise-1 
    $steps: 30
    @for $i from 1 through $steps 
        #{percentage($i*math.div(1, $steps)) }
            $top: random(100)
            $bottom: random(101 - $top)
            clip-path: inset(#{$top}px 0 #{$bottom}px 0)
    

@keyframes noise-2 
    $steps: 30
    @for $i from 0 through $steps 
        #{percentage($i*math.div(1, $steps)) }
            $top: random(100)
            $bottom: random(101 - $top)
            clip-path: inset(#{$top}px 0 #{$bottom}px 0)

// .scanlines 
//   overflow: hidden
//   mix-blend-mode: difference

// .scanlines::before 
//     content: ""
//     position: absolute
//     width: 100%
//     height: 100%
//     top: 0
//     left: 0
//     background: repeating-linear-gradient(to bottom, transparent 0%, rgba(255, 255, 255, 0.05) .5%, transparent 1%)
//     animation: fudge 7s ease-in-out alternate infinite

// @keyframes fudge 
//     from 
//         transform: translate(0px, 0px)
//     to 
//         transform: translate(0px, 2%)
